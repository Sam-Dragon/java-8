# POINTS

1. Predicate accepts Target type but results always must be boolean
2. Predicate equals doesn't work on predicateExpression matched with directly lamda expression
3. Predicate operations
    [abstract] > test - evaluates the predicate 
    [default]  > negate - negates the predicate results
    [default]  > and / or - combines the similar datatype predicates results based on logical AND & OR 
    [default]  > isEquals - verifies if two predicates are same
4. Predicate Chaining
   > and, or & negate
5. BiPredicate is same as predicate but it accepts two parameters
6. Custom predicates can be created if we need more than two parameters
7. Predicate types is majorly used for "filtering"

# Primitive Specialization 
1. Prevents boxing of primitives & provides better performance
2. Remember that primitive specialization doesnt required any target type to be specified 
9. Operation supports
    - IntPredicate, LongPredicate, DoublePredicate 
10. Primitive Predicate Chaining [No IsEquals support]
   > and, or & negate
11. No Primitive Specialization Operation for BiPredicate

# Issues
1. Predicate 'and' & 'or' operation doesn't works on different datatype predicates
2. Predicate<void> doesn't work
3. BiPredicate<void, void> doesn't work
4. BiPredicate doesn't support isEquals method

Note : Always mark the custom functional  interface with @FunctionalInterface annotation 
for safety purpose