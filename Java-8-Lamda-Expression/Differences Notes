# POINTS

1. Difference b/w Anonymous class & Lamda expression
> Anonymous class has constructor, method and variables defined whereas
  Lamda expression has anonymous method
> Anonymous class has to be used where we want to work on variables whereas
  Lamda expression must be used to call method
> Anonymous class 'this' variable refers to anonymous class  defined whereas
  Lamda expression 'this' variable refers to enclosing class
> Anonymous class variables can be final and non-final whereas
  Lamda expression has variables final in nature
> Anonymous class return type can be interface or functional interface whereas
  Lamda expression return type has to be functional interface
> Anonymous class can have more than one abstract method whereas
  Lamda expression can have only one abstract method
  
2. Difference b/w Function, Predicate
> Both accepts one parameter but predicate returns boolean whereas function returns object
> Predicate only defines the parameter where as function defines both parameter and return type as well

3. Difference b/w Function, Consumer
> Both accepts one parameter but consumer returns void whereas function returns object
> Consumer only defines the parameter where as function defines both parameter and return type as well

4. Difference b/w Function, Supplier
> Supplier doesn't accept parameter but returns object whereas function accepts parameter and returns object
> Supplier only defines the return type where as function defines both parameter and return type as well

5. Difference b/w Predicate, Consumer
> Both accepts one parameter but consumer returns void whereas predicate returns boolean

6. Difference b/w Supplier, Consumer
> Supplier doesn't accept parameter but returns object Consumer accepts parameter and returns void

7. Difference b/w Interface vs Abstract class
- Interface must be declared with keyword 'interface' where as 
Abstract class must be declared with keyword 'abstract'
2. Interface contains variables which are final (Constants) where as 
Abstract class can contain both
3. Interface doesn't define constructor, final method where as 
Abstract class can
4. Interface contains abstract, default & static method where as 
Abstract class cannot define default methods but rest it can declare
5. Interface can extends to interfaces where as 
Abstract class can be extended from a class and implement multiple interfaces
6. Default Method Functional interface can be used to refer lamda expression where as
abstract class cannot